# Generated by Django 2.2.3 on 2019-07-12 19:24

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('barcode', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField()),
                ('description', models.TextField(blank=True, db_index=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, db_index=True, null=True)),
                ('adapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='libraries', to='sims.Adapter')),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('num_lanes', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False)),
                ('internal_id', models.CharField(max_length=25)),
                ('submitted', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('pi_first_name', models.CharField(max_length=50)),
                ('pi_last_name', models.CharField(max_length=50)),
                ('institute', models.CharField(max_length=75)),
                ('type', models.CharField(max_length=50)),
                ('submission_schema', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('sample_schema', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('submission_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('sample_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('biocore', models.BooleanField(default=False)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, db_index=True, max_length=60, null=True, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('imported', models.DateTimeField(auto_now=True, db_index=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='sims.Submission')),
            ],
            options={
                'unique_together': {('sample_id', 'submission'), ('name', 'submission')},
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sims.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, db_index=True, null=True)),
                ('created', models.DateField(auto_now=True, db_index=True)),
                ('library_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
                ('libraries', models.ManyToManyField(related_name='pools', to='sims.Library')),
            ],
        ),
        migrations.AddField(
            model_name='library',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='libraries', to='sims.Sample'),
        ),
        migrations.CreateModel(
            name='LanePool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('lane', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lane_pools', to='sims.Lane')),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sims.Pool')),
            ],
        ),
        migrations.AddField(
            model_name='lane',
            name='pools',
            field=models.ManyToManyField(through='sims.LanePool', to='sims.Pool'),
        ),
        migrations.AddField(
            model_name='lane',
            name='run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lanes', to='sims.Run'),
        ),
        migrations.AlterUniqueTogether(
            name='lane',
            unique_together={('run', 'index')},
        ),
    ]
